{"version":3,"sources":["webpack:///./src/store/departments/selectors.js","webpack:///./src/fields/index.js","webpack:///./src/forms/index.js","webpack:///./src/fields/Error/index.js","webpack:///./src/fields/Input/index.js","webpack:///./src/forms/FormVerifiableCredentialTemplate/index.js","webpack:///./src/forms/FormVerifiableCredentialSearch/index.js","webpack:///./src/forms sync \\.\\/[^\\/]+\\/index\\.js$","webpack:///./src/forms/FormAccountCreate/index.js","webpack:///./src/forms/FormAccountCreate/component.js","webpack:///./src/fields sync \\.\\/[^\\/]+\\/index\\.js$","webpack:///./src/fields/Checkbox/index.js","webpack:///./src/fields/CheckboxSimple/index.js","webpack:///./src/fields/Field/index.js","webpack:///./src/fields/Select/index.js","webpack:///./src/fields/Switch/index.js","webpack:///./src/forms/FormClaimsSearch/index.js","webpack:///./src/store/departments sync \\.\\/.+\\/selectors\\.js$","webpack:///./src/forms/FormEmblemTypeCreate/index.js","webpack:///./src/forms/FormIssuerCreate/index.js","webpack:///./src/forms/FormLogin/index.js","webpack:///./src/forms/FormPeopleSearch/index.js","webpack:///./src/forms/FormVerifiableCredentialGenerate/index.js","webpack:///./src/forms/FormVerifiableCredentialIssue/index.js","webpack:///./src/forms/FormVerifiableCredentialTemplate copy/index.js","webpack:///./src/forms/Formik/index.js","webpack:///./src/forms/FormikStateful/index.js"],"names":["_upperFirst","_interopRequireDefault","__webpack_require__","_forIn","req","require","keys","forEach","key","storeName","replace","fromName","default","selectors","getState","state","module","exports","selector","name","_len","arguments","length","args","Array","_key","apply","concat","componentName","_styledComponents","_formik","_styledTheme","ErrorField","ErrorMessage","withConfig","displayName","componentId","borders","borderColor","borderRadius","boxShadow","color","fontSize","fontWeight","space","defaultProps","Input","Field","p","_react","_reactRedux","_actions","_selectors","_atoms","_fields","FormVerifiableCredentialTemplate","props","_this","_React$Component","call","this","componentDidMount","componentDidUpdate","componentDidCatch","render","_this2","isSubmitting","createElement","FormSubmitting","Form","onSubmit","handleSubmit","style","width","padding","component","className","type","Flex","column","gradient","gradientDir","my","FieldArray","arrayHelpers","values","claims","map","claim","index","align","between","py","Box","Span","ml","ButtonFlat","onClick","remove","uppercase","palette","push","description","mt","disabled","React","Component","FormTemplate","withFormik","mapPropsToValues","validate","errors","_ref2","_ref","Mutation","_objectWithoutPropertiesLoose","JSON","stringify","mutateRequest","connect","mutation","fromData","get","dispatch","data","delta","center","Heading","IssuerSearchField","Label","styled","label","Formik","filterIsOpen","openFilter","bind","_assertThisInitialized","closeFilter","toggleFilter","setState","componentWillUpdate","componentWillUnmount","placeholder","Button","mx","cursor","textAlign","mr","FormVerifiableCredentialSearch","console","log","request","queryRequest","query","./FormAccountCreate/index.js","./FormClaimsSearch/index.js","./FormEmblemTypeCreate/index.js","./FormIssuerCreate/index.js","./FormLogin/index.js","./FormPeopleSearch/index.js","./FormVerifiableCredentialGenerate/index.js","./FormVerifiableCredentialIssue/index.js","./FormVerifiableCredentialSearch/index.js","./FormVerifiableCredentialTemplate copy/index.js","./FormVerifiableCredentialTemplate/index.js","./Formik/index.js","./FormikStateful/index.js","webpackContext","id","webpackContextResolve","e","Error","code","Object","resolve","_recompose","_component","QueryLifecycle","lifecycle","prevProps","StateHandler","withStateHandlers","undefined","setData","value","FormSettings","account","email","password","fetch","method","body","then","res","catch","err","compose","FormIsSubmitting","Paragraph","./Checkbox/index.js","./CheckboxSimple/index.js","./Error/index.js","./Field/index.js","./Input/index.js","./Select/index.js","./Switch/index.js","_Error","assign","fancy","Fragment","checked","htmlFor","_Input","FieldStyled","_ref$type","floating","_Creatable","_styledSystem","SelectStyled","Select","height","setFieldValue","setFieldTouched","options","isDisabled","isMulti","isSearchable","menuIsOpen","isOpen","onChange","option","onBlur","_interopRequireWildcard","_propTypes","_reactSwitch","SwitchStyled","Switch","propTypes","PropTypes","bool","offColor","string","onColor","offHandleColor","onHandleColor","_useState","useState","setChecked","m","MutationGenerate","issuer","subject","form","resetForm","./data/selectors.js","./dialog/selectors.js","FormEmblemTypeCreate","pill","actions","web3","contracts","Emblems","contract","createEmblemType","setSubmitting","FormClass","HorizontalRule","address","did","site","_router","_HorizontalRule","LoginButton","button","Link","to","or","_this$props","isValid","FormVerifiableCredentialGenerate","error","status","level","mb","hidden","_idx","isLoading","isTemplateSelected","template","templates","_","output","templateOptionsTransform","filter","claim_fields","_this$state"],"mappings":"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","file":"5-656aa9616e47799543a1.js","sourcesContent":["import upperFirst from 'lodash/upperFirst'\nimport forIn from 'lodash/forIn'\n\nconst req = require.context('.', true, /\\.\\/.+\\/selectors\\.js$/)\nreq.keys().forEach((key) => {\n  const storeName = key.replace(/\\.\\/(.+)\\/.+$/, '$1')\n  const fromName = `from${upperFirst(storeName)}`\n  const selectors = req(key)\n  const getState = (state = {}) => state[storeName] || {}\n\n  module.exports[fromName] = {}\n  forIn(selectors, (selector, name) => {\n    if (typeof selector === 'function') {\n      module.exports[fromName][name] = (state, ...args) => selector(getState(state), ...args)\n    }\n  })\n})\n","const req = require.context('.', true, /\\.\\/[^/]+\\/index\\.js$/)\nreq.keys().forEach((key) => {\n  const componentName = key.replace(/^.+\\/([^/]+)\\/index\\.js/, '$1')\n  module.exports[componentName] = req(key).default\n})","const req = require.context('.', true, /\\.\\/[^/]+\\/index\\.js$/)\nreq.keys().forEach((key) => {\n  const componentName = key.replace(/^.+\\/([^/]+)\\/index\\.js/, '$1')\n  module.exports[componentName] = req(key).default\n})","/* --- Global Dependencies --- */\nimport styled from 'styled-components'\nimport { ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport { borders,\n  borderColor,\n  borderRadius,\n  boxShadow,\n  color,\n  fontSize,\n  fontWeight,\n  space\n} from 'styled-theme'\n\n/* --- Styled Component --- */\nconst ErrorField = styled(ErrorMessage)`\n  ${borders}\n  ${borderColor}\n  ${borderRadius}\n  ${boxShadow}\n  ${color}\n  ${fontSize}\n  ${fontWeight}\n  ${space}\n  color: red;\n  font-size: 10px;\n  font-weight: normal;\n`\n\nErrorField.defaultProps = {\n  color: 'red',\n  fontSize: 0,\n  fontWeight: 'normal'\n}\n\nexport default ErrorField","/* --- Global Dependencies --- */\nimport styled from 'styled-components'\nimport { Field } from 'formik';\n\n/* --- Local Dependencies --- */\nimport {\n  borders,\n  borderColor,\n  borderRadius,\n  boxShadow,\n  space\n} from 'styled-theme'\n\n/* --- Styled Component --- */\nconst Input = styled(Field)`\n  ${borders}\n  ${borderColor}\n  ${borderRadius}\n  ${boxShadow}\n  ${space}\n`\n\nInput.defaultProps = {\n  boxShadow: 'light',\n  borderRadius: 8,\n  p: 15,\n}\nexport default Input","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, FieldArray, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { Box, Button, ButtonFlat, Flex, Heading, Paragraph, Span } from 'atoms'\nimport { Input } from 'fields'\n\n/* --- React Component --- */\nclass FormVerifiableCredentialTemplate extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n\n  // Mounted\n  componentDidMount()\n  {\n\n  }\n\n  // Updated\n  componentDidUpdate()\n  {\n\n  }\n\n  // Catched Error\n  componentDidCatch()\n  {\n\n  }\n\n  /* Render */\n  render(){\n    const { isSubmitting } = this.props\n    return(\n      isSubmitting\n      ? <FormSubmitting/>\n      : <Form onSubmit={this.props.handleSubmit} style={{width: '100%', padding: '30px'}} >\n\n        <label>Name <ErrorMessage name=\"name\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"name\" />\n        \n        <label>Description <ErrorMessage name=\"description\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"description\" />\n        \n        <label>Type <ErrorMessage name=\"type\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"type\" />\n\n        <Flex column gradient='gray' gradientDir='90' borderColor='#e0e0e0' borderRadius={5} my={15} p={35}>\n\n        <FieldArray\n            name=\"claims\"\n            render={arrayHelpers => (\n              <div>\n                {this.props.values.claims.map((claim, index) => (\n                  <div key={index}>\n                    <Flex align='center' between py={15}>\n                      <Box width={[1,1, 0.40]}>\n                        <label style={{ fontSize:'12px'}} >Key <ErrorMessage name={`claims.${index}.name`} component=\"span\" className=\"input-error\" /></label>\n                        <Input type=\"text\" name={`claims.${index}.name`} />\n                        <Span fontSize={[0]}>\tex. nameFull, addressStreet, questId, etc....</Span>\n                      </Box>\n  \n                      <Box width={[1,1, 0.40]} ml={15}>\n                        <label style={{ fontSize:'12px' }}>Description <ErrorMessage name={`claims.${index}.description`} component=\"span\" className=\"input-error\" /></label>\n                        <Input type=\"text\" name={`claims.${index}.description`} />\n                        <Span fontSize={[0]}>A short description of the claim data.</Span>\n                      </Box>\n\n                      <Box>\n                        <ButtonFlat ml='auto' type=\"button\" onClick={() => arrayHelpers.remove(index)}> Delete </ButtonFlat>\n                      </Box>\n                    </Flex>\n\n                  </div>\n                ))}\n                <ButtonFlat type='button' uppercase palette='blue' onClick={() => arrayHelpers.push({ name: '', description: '' })} mt={20} width={1}>\n                  Add Claim Field\n                </ButtonFlat>\n              </div>\n            )}\n          />\n\n        </Flex>\n\n        <ButtonFlat type=\"submit\" uppercase palette='green' disabled={this.props.isSubmitting} fontSize={2} mt={15} width={1}>\n          Create Template\n        </ButtonFlat>\n    </Form>\n    )\n  }\n}\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  mutation: fromData.get(state,  'template|verifiableCredential'),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'template|verifiableCredential',\n    }\n  ))\n});\n\n/* --- GraphQL --- */\nconst MutationGenerate = ({ claims, description, name, type }) =>`\nmutation {\n  addTemplate\n  (\n    description: \"${description}\"\n    name:\"${name}\",\n    type: \"${type}\",\n    claim_fields: ${JSON.stringify(claims).replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\")}\n  ) \n  {\n    name\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormTemplate = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n    claims: []\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    if (!values.description) errors.description = '*Required';\n    if (!values.type) errors.type = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n    const Mutation = MutationGenerate(values)\n    props.mutateRequest(Mutation)\n  }\n})(FormVerifiableCredentialTemplate)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTemplate)\n\n\nconst FormSubmitting = props =>\n<Flex column center>\n  <Heading color='blue' fontSize={[3]}>\n    Saving Template\n  </Heading>\n</Flex>","/* --- Global Dependencies --- */\nimport idx from 'idx'\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { Box, Button, Flex, Heading, Span } from 'atoms'\n\n/* --- Styled Components --- */\nimport styled from 'styled-components'\nconst SearchField = styled(Field)`\n  height: 50px;\n  width: 100%;\n`\n\nconst IssuerSearchField = styled(Field)`\n  height: 30px;\n`\n\nconst Label = styled.label`\n  font-size: 10px;\n`\n\n/* --- React Component --- */\nclass Formik extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      filterIsOpen: true\n    }\n\n    this.openFilter = this.openFilter.bind(this);\n    this.closeFilter = this.closeFilter.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n  }\n\n  openFilter() {\n    this.setState({filterIsOpen: true});\n  }\n\n  closeFilter() {\n    this.setState({filterIsOpen: false});\n  }\n\n  toggleFilter() {\n    this.setState({filterIsOpen: !this.state.filterIsOpen});\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    return(\n      <Box {...this.props.styled}>\n        <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n          <Flex>\n            <IssuerSearchField type=\"text\" name=\"subject\" placeholder='Subject Address or Decentralized Identifier...' />\n\n            <Button type=\"submit\" disabled={this.props.isSubmitting} color='white' gradient='blue' borderRadius='0 10px 10px 0' mx={0} width={150}>\n              Search\n            </Button>\n          </Flex>\n        </Form>\n        <Heading onClick={this.toggleFilter} color='grayDark' cursor='pointer' fontSize={2} fontWeight={300} textAlign='center' >Filters</Heading>\n        {\n          this.state.filterIsOpen &&\n          <Flex>\n            <Box mr={15}>\n              <Label>Issuer <ErrorMessage name=\"issuer\" component=\"span\" /></Label>\n              <IssuerSearchField type=\"text\" name=\"issuer\" placeholder='Issuer' />\n            </Box>\n            <Box mr={15}>\n              <Label>Type <ErrorMessage name=\"type\" component=\"span\" /></Label>\n              <IssuerSearchField type=\"text\" name=\"type\" placeholder='EducationCredential...' />\n            </Box>\n            <Box mr={15}>\n              <Label>Issue Date After <ErrorMessage name=\"name\" component=\"span\" /></Label>\n              <IssuerSearchField type=\"date\" name=\"dateIssueAfter\" />\n            </Box>\n            <Box>\n              <Label>Issue Date Before <ErrorMessage name=\"name\" component=\"span\" /></Label>\n              <IssuerSearchField type=\"date\" name=\"dateIssueBefore\" />\n            </Box>\n          </Flex>\n        }\n      </Box>\n    )\n  }\n}\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  request: fromData.get(state,  `query|verifiableCredentialTemplates`),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  queryRequest: (query) =>dispatch(data.queryRequest('REQUEST')(\n    query,\n    {\n      delta: 'query|verifiableCredentialTemplates',\n    }\n  )),\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'mutate|credential',\n    }\n  ))\n});\n\nconst MutationGenerate = ({ issuer, subject,}) =>\n`\n{\n  getVerifiableCredential(\n    iss: \"${issuer}\"\n    sub: \"${subject}\n  ) {\n    iss\n    sub\n    claims {\n      key\n      value\n    }\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormVerifiableCredentialSearch = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n\n    console.log(values, 'submit action')\n  }\n})(Formik)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVerifiableCredentialSearch)","var map = {\n\t\"./FormAccountCreate/index.js\": 482,\n\t\"./FormClaimsSearch/index.js\": 494,\n\t\"./FormEmblemTypeCreate/index.js\": 496,\n\t\"./FormIssuerCreate/index.js\": 497,\n\t\"./FormLogin/index.js\": 498,\n\t\"./FormPeopleSearch/index.js\": 499,\n\t\"./FormVerifiableCredentialGenerate/index.js\": 500,\n\t\"./FormVerifiableCredentialIssue/index.js\": 501,\n\t\"./FormVerifiableCredentialSearch/index.js\": 395,\n\t\"./FormVerifiableCredentialTemplate copy/index.js\": 502,\n\t\"./FormVerifiableCredentialTemplate/index.js\": 369,\n\t\"./Formik/index.js\": 503,\n\t\"./FormikStateful/index.js\": 504\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 481;","/* --- Global Dependencies --- */\nimport { connect } from 'react-redux'\nimport { compose, lifecycle, withStateHandlers } from 'recompose'\nimport { withFormik } from 'formik';\n\n/* --- Local Dependencies --- */\n\n/* --- Module Dependencies --- */\nimport Form from './component'\n\n/* ------ Container State ------ */\n\n/* --- Lifecycle --- */\nconst QueryLifecycle = lifecycle({\n  /*--- Component Mount ---*/\n  componentDidMount()\n  {\n\n  },\n\n  /*--- Component Update ---*/\n  componentDidUpdate(prevProps)\n  {\n    \n  }\n})\n\n/* -- Redux -- */\nconst mapStateToProps = (state, props) => ({\n\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n\n});\n\n/* -- State Handler -- */\nconst StateHandler = withStateHandlers(\n  () => ({\n    data: undefined\n  }),\n  {\n    setData: () => (value) => ({\n      data: true,\n    }),\n  }\n)\n\n/* ------ Form Configuration ------ */\nconst FormSettings = {\n  handleSubmit: (values, { props, ...form }) => {\n    // Construct account registration objects from submitted form values.\n    const account = {\n      email: values.email,\n      password: values.password\n    }\n    // const accountRegisterAPI = `${process.env.APPLICATION_URL}${process.env.APPLICATION_REGISTER}`\n    const accountRegisterAPI = 'http://localhost:8080/account/register'\n    // POST :: Send account registration details to backend API endpoint.\n    fetch(accountRegisterAPI, {\n      method: 'post',\n      body: JSON.stringify(account)\n    })\n    .then(res => {\n      console.log(res)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  },\n  mapPropsToValues: props => ({\n    email: '',\n  }),\n  validate: values => {\n    let errors = {};\n    if (!values.email) {\n      errors.email = '*Required';\n    }\n    return errors;\n  }\n}\n\nexport default compose(\n  // connect(mapStateToProps, mapDispatchToProps),\n  withFormik(FormSettings),\n  StateHandler,\n  QueryLifecycle\n)(Form)","/* --- Global Dependencies --- */\nimport React from 'react';\n\n/* --- Local Dependencies --- */\nimport { Box, Button, Field, Form, Heading, Paragraph } from 'atoms'\nimport { Error } from 'fields'\n\n/* ------ Component ------ */\nexport default ({ values, handleSubmit, isSubmitting, ...props }) =>\nisSubmitting ? <FormIsSubmitting/> :\n<Form onSubmit={handleSubmit} style={{width: '100%'}} >\n\n  {/* <label>Email <Error.default name=\"email\" component=\"span\" /></label> */}\n  <Field type=\"text\" name=\"email\" placeholder='Email' value={values.email} mt={30} />\n  <Error.default name=\"email\" component=\"span\" />\n  {/* <label>Password <Error.default name=\"password\" component=\"span\" /></label> */}\n  <Field type=\"password\" name=\"password\" placeholder='Password' value={values.password} mt={10}/>\n  <Error.default name=\"password\" component=\"span\" />\n\n  <Button type=\"submit\" disabled={isSubmitting} mt={15} width={1}>\n    Create Account\n  </Button>\n</Form>\n\nconst FormIsSubmitting = props =>\n<Box>\n  <Heading fontSize={[3]}>\n    Recovering Account\n  </Heading>\n  <Paragraph fontSize={[1]}>\n    Please check your email to reset the password to recover account.\n  </Paragraph>\n</Box>","var map = {\n\t\"./Checkbox/index.js\": 485,\n\t\"./CheckboxSimple/index.js\": 486,\n\t\"./Error/index.js\": 331,\n\t\"./Field/index.js\": 487,\n\t\"./Input/index.js\": 368,\n\t\"./Select/index.js\": 488,\n\t\"./Switch/index.js\": 493\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 484;","/* --- Global Dependencies --- */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Field } from 'formik';\n\n/* --- Local Dependencies --- */\nimport { Label,  Flex } from 'atoms'\nimport Error from '../Error';\n\n\n\nconst Checkbox = styled(Flex)\n`\n  & > label {\n    margin-top: 0;\n  }\n\n  & .input-error {\n    background: #FFF;\n    padding: 5px;\n    border: 1px solid #9a9a9a42;\n    border-radius: 4px;\n    // box-shadow: 1px 2px 7px 1px #00000012;\n    box-shadow: 1px 1px 0px 1px #00000012;\n    top: -7px;\n    right: -7px;\n  }\n`\n/* --- Component --- */\nexport default ({ type = 'text', name, label, placeholder, component, styled, ...props }) =>\n<Flex align='center' {...styled}>\n  <Field fancy type={'checkbox'} name={name} placeholder={placeholder} />\n  <Label fontSize={2}>{label}</Label>\n  <Error name={name} component=\"span\" className=\"input-error\"/>\n</Flex>","/* --- Global Dependencies --- */\nimport React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Checkbox = ({id, label, name, value}) =>\n<>\n  <input\n    name={name}\n    type=\"checkbox\"\n    value={value}\n    checked={value}\n  />\n  <label htmlFor={id}>{label}</label>\n</>\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.bool\n}\n\nexport default Checkbox","/* --- Global Dependencies --- */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'atoms'\nimport Input from '../Input';\nimport Error from '../Error';\n\nconst FieldStyled = styled(Box)\n`\n  & > label {\n    margin-top: 0;\n  }\n\n  & .input-error {\n    background: #FFF;\n    padding: 5px;\n    border: 1px solid #9a9a9a42;\n    border-radius: 4px;\n    // box-shadow: 1px 2px 7px 1px #00000012;\n    box-shadow: 1px 1px 0px 1px #00000012;\n    top: -7px;\n    right: -7px;\n  }\n`\n/* --- Component --- */\nexport default ({ type = 'text', name, label, placeholder, component, styled }) =>\n<FieldStyled mt={20} {...styled}>\n  <label>{label}</label>\n  <Box>\n    {\n      !component\n      ? <Input fancy type={type} name={name} placeholder={placeholder} />\n      : component\n    }\n    <Error floating name={name} component=\"span\" className=\"input-error\"/>\n  </Box>\n</FieldStyled>","/* --- Global Dependencies --- */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Select from 'react-select/lib/Creatable'\nimport styled from 'styled-components'\nimport {\n  height,\n  space,\n  width,\n} from 'styled-system'\n\nconst SelectStyled = styled(Select)`\n  ${height}\n  ${space}\n  ${width}\n`\n\nSelectStyled.defaultProps ={\n  mt: 20,\n}\n\n/* --- Container --- */\nconst SelectField = ({ name, setFieldValue, setFieldTouched, ...props }) => \n<SelectStyled\n  className='select'\n  options={props.options || []}\n  placeholder={props.placeholder}\n  isDisabled={props.isDisabled}\n  isMulti={props.isMulti}\n  isSearchable={props.isSearchable}\n  menuIsOpen={props.isOpen}\n  onChange={(option)=> setFieldValue(name, option) }\n  onBlur={()=> setFieldTouched(name, true) }\n/>\n\nSelectField.propTypes = {\n  options: PropTypes.array.isRequired,\n  isDisabled: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  isSearchable: PropTypes.bool,\n  menuIsOpen: PropTypes.bool\n}\n\nexport default SelectField","/* --- Global Dependencies --- */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport Switch from \"react-switch\";\nimport styled from 'styled-components'\nimport {\n  height,\n  space,\n  width,\n} from 'styled-system'\n\n/* --- Local Dependencies --- */\nimport { Flex, Label } from 'atoms'\n\n/* --- Styled --- */\nconst SwitchStyled = styled(Switch)`\n  ${height}\n  ${space}\n  ${width}\n`\n\nSwitchStyled.defaultProps ={\n  mr: 15\n}\n\n/* --- Container --- */\nconst SwitchField = ({ label, name, height, offColor, onColor, width, setFieldValue, setFieldTouched, ...props }) => {\n  const [checked, setChecked] = useState(false);\n\n  const toggle = () => {\n    setChecked(!checked)\n    setFieldValue(name, !checked)\n  }\n\n  return (\n    <Flex align='center' mt={20}>\n      <SwitchStyled\n        checked={checked}\n        className='switch'\n        height={height}\n        width={width}\n        offColor={offColor}\n        onColor={onColor || '#265de6'}\n        onChange={toggle}\n        onBlur={()=> setFieldTouched(name, true) }\n      />\n      <Label fontSize={[1,1,2]} m={0}>{label}</Label>\n    </Flex>\n  )\n}\n\nSwitchStyled.propTypes = {\n  checked: PropTypes.bool,\n  offColor: PropTypes.string,\n  onColor: PropTypes.string,\n  offHandleColor: PropTypes.string,\n  onHandleColor: PropTypes.string\n}\n\nexport default SwitchField","/* --- Global Dependencies --- */\nimport idx from 'idx'\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { Box, Button, ButtonFlat, Flex, Heading, Span } from 'atoms'\n\n/* --- Styled Components --- */\nimport styled from 'styled-components'\nconst SearchField = styled(Field)`\n  height: 50px;\n  width: 100%;\n`\n\nconst IssuerSearchField = styled(Field)`\n  height: 30px;\n`\n\nconst Label = styled.label`\n  font-size: 10px;\n`\n\n/* --- React Component --- */\nclass Formik extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      filterIsOpen: true\n    }\n\n    this.openFilter = this.openFilter.bind(this);\n    this.closeFilter = this.closeFilter.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n  }\n\n  openFilter() {\n    this.setState({filterIsOpen: true});\n  }\n\n  closeFilter() {\n    this.setState({filterIsOpen: false});\n  }\n\n  toggleFilter() {\n    this.setState({filterIsOpen: !this.state.filterIsOpen});\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    return(\n      <Box color='white' {...this.props.styled}>\n        <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n            <Label>Subject <ErrorMessage name=\"issuer\" component=\"span\" /></Label>\n            <IssuerSearchField type=\"text\" name=\"subject\" placeholder='Subject' />\n            <Label>Issuer <ErrorMessage name=\"issuer\" component=\"span\" /></Label>\n            <IssuerSearchField type=\"text\" name=\"issuer\" placeholder='e.x. \"did:eth\"0xK8C2...' />\n            <Label>Type <ErrorMessage name=\"type\" component=\"span\" /></Label>\n            <IssuerSearchField type=\"text\" name=\"type\" placeholder='e.x: EducationCredential...' />\n\n          <ButtonFlat type=\"submit\" disabled={this.props.isSubmitting} color='white' gradient='blue' mx={0} width={1}>\n            Search\n          </ButtonFlat>\n        </Form>\n      </Box>\n    )\n  }\n}\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  request: fromData.get(state,  `query|verifiableCredentialTemplates`),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  queryRequest: (query) =>dispatch(data.queryRequest('REQUEST')(\n    query,\n    {\n      delta: 'search|verifiable-credential',\n    }\n  )),\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'mutate|credential',\n    }\n  ))\n});\n\nconst MutationGenerate = ({ issuer, subject, type}) =>\n`\n{\n  getVerifiableCredential\n  ${ issuer || subject || type ? `(\n    ${issuer ? `iss: \"${issuer}\"` : '' }\n    ${subject ? `sub: \"${subject}\"` : '' }\n    ${type ? `type: \"${type}\"` : '' }\n  )`\n  : ''\n  }\n  {\n    iss\n    sub\n    type\n    claims {\n      key\n      value\n    }\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormVerifiableCredentialSearch = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n\n    console.log(values, 'submit action')\n    let m = MutationGenerate(values)\n    console.log(m)\n    props.queryRequest(MutationGenerate(values))\n    form.resetForm()\n  }\n})(Formik)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVerifiableCredentialSearch)","var map = {\n\t\"./data/selectors.js\": 138,\n\t\"./dialog/selectors.js\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 495;","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { withFormik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport { Button } from 'atoms'\n\n/* --- React Component --- */\nclass FormEmblemTypeCreate extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    return(\n      <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n        <label>Name </label>\n        <Field type=\"text\" name=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <br></br>\n        <label>Description</label>\n        <Field type=\"text\" name=\"description\" />\n        <ErrorMessage name=\"description\" component=\"div\" />\n        <label>Delegates </label>\n        <Button pill type=\"submit\" disabled={this.props.isSubmitting} mt={15} width={1}>\n          Submit\n        </Button>\n      </Form>\n    )\n  }\n}\n\n/* --- Form Configuration --- */\nexport default withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: (props) => ({ name: props.name }),\n\n  /* Form Validation */\n  validate: values => {\n    const errors = {};\n    if (!values.name) errors.name = 'Name Required';\n    if (!values.description) errors.name = 'Description Required';\n    return errors;\n  },\n  \n  /* Handle Form Submission */\n  handleSubmit: (values, actions) => {\n\n    // Generate IPFS Hash\n    // @todo Add IPFS functionality to repo.\n    const IPFS_HASH = ''\n    const ETHEREUM_ADDRESS = ['0x696365B6A5445F647065454DA0544f1AAC73ad1f']\n\n    // Call Smart Contract Function\n    actions.props.web3.contracts.Emblems.contract\n    .createEmblemType(IPFS_HASH, ETHEREUM_ADDRESS)\n    .then( res => console.log(res))\n\n    // Reset Form State\n    actions.setSubmitting(false);\n  },\n\n  displayName: 'BasicForm',\n})(FormEmblemTypeCreate)","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { ButtonFlat, Flex, Heading, HorizontalRule, Paragraph, Span } from 'atoms'\nimport { Input } from 'fields'\n\n/* --- React Component --- */\nclass FormClass extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  \n  // Mounted\n  componentDidMount()\n  {\n\n  }\n\n  // Updated\n  componentDidUpdate()\n  {\n\n  }\n\n  // Catched Error\n  componentDidCatch()\n  {\n\n  }\n  \n  /* Render */\n  render(){\n    const { isSubmitting } = this.props\n    return(\n      isSubmitting\n      ? <FormSubmitting/>\n      : <>\n        <Heading color='green' fontSize={[4,4,5]}>\n          Create Issuer\n        </Heading>\n        <Paragraph fontSize={[1]}>\n          Issuers are capable of issuing verifiable credentials to decentralized idetnifiers.\n        </Paragraph> \n        <HorizontalRule my={15}/>\n\n        <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n\n          <label>Name <ErrorMessage name=\"name\" component=\"span\" className=\"input-error\" /></label>\n          <Input type=\"text\" name=\"name\" />\n          \n          <label>Address <ErrorMessage name=\"address\" component=\"span\" className=\"input-error\" /></label>\n          <Input type=\"text\" name=\"address\" />\n          \n          <label>Decentralized Identifier <ErrorMessage name=\"did\" component=\"span\" className=\"input-error\" /></label>\n          <Input type=\"text\" name=\"did\" />\n          \n          <label>Description <ErrorMessage name=\"description\" component=\"span\" className=\"input-error\" /></label>\n          <Input type=\"text\" name=\"description\" />\n          \n          <label>Site <ErrorMessage name=\"site\" component=\"span\" className=\"input-error\" /></label>\n          <Input type=\"text\" name=\"site\" />\n          \n\n          <ButtonFlat type=\"submit\" palette='blue' disabled={this.props.isSubmitting} mt={15} width={1}>\n            Create Issuer\n          </ButtonFlat>\n      </Form>\n      </>\n    )\n  }\n}\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  mutation: fromData.get(state, 'issuer|create'),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'issuer|create',\n    }\n  ))\n});\n\n/* --- GraphQL --- */\nconst MutationGenerate = ({ address, did, name, site, description }) =>`\nmutation {\n  addIssuer(\n    address: \"${address}\"\n    did: \"${did}\"\n    name: \"${name}\",\n    site: \"${site}\",\n    description: \"${description}\"\n    ) {\n      id\n      address\n      name\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormTemplate = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n    const Mutation = MutationGenerate(values)\n    props.mutateRequest(Mutation)\n  }\n})(FormClass)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTemplate)\n\nconst FormSubmitting = props =>\n<Flex column center>\n  <Heading color='blue' fontSize={[3]}>\n    Creating Issuer\n  </Heading>\n</Flex>","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { Link } from '@reach/router'\nimport styled from 'styled-components'\nimport { withFormik } from 'formik';\nimport { Field, Form, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport { Button, ButtonFlat, Flex, Span } from 'atoms'\nimport HorizontalRule from '../../atomic/atoms/HorizontalRule';\n// import { Input } from 'fields'\n\n\nconst Input = styled(Field)`\n  border: none;\n  height: 50px;\n  margin-top: 1.25rem;\n  background-color: rgba(247,247,249,.7);\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n  outline: none;\n  transition: background-color .3s ease;\n\n  &:focus,\n  &:active,\n   {\n    background-color: rgba(247,247,249,1);\n  }\n`\n\nconst LoginButton = styled.button`\n  background-color: #5867dd;\n  border-color: #5867dd;\n  box-shadow: 0 4px 16px 0 rgba(88,103,221, 0.15);\n  color: #fff;\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  outline: 0!important;\n  vertical-align: middle;\n  border: 1px solid transparent;\n  padding: .65rem 1rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: .25rem;\n  height: 50px;\n  padding-left: 2.5rem;\n  padding-right: 2.5rem;\n\n  &:hover {\n    background-color: #384ad7;\n    border-color: #2e40d4;\n  }\n  `\n\n/* --- React Component --- */\nclass Formik extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    return(\n      <Flex column width={1}>\n      <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n        \n        <ErrorMessage name=\"name\" component=\"span\" className=\"input-error\" />\n        <Input type=\"text\" name=\"email\" placeholder='Email' />\n        <Input type=\"password\" name=\"password\" placeholder='Password' />\n\n        <Flex align='center' between mt={20}>\n          <Link to='/account/recover'>\n            <Span>Forgot Password?</Span>\n          </Link>\n          <LoginButton pill type=\"submit\" disabled={this.props.isSubmitting} mt={15} width={1}>\n            Login\n          </LoginButton>\n        </Flex>\n      </Form>\n      <HorizontalRule or my={15}/>\n      <Flex between mt={20}>\n        <ButtonFlat palette='google'>Google</ButtonFlat>\n        <ButtonFlat palette='twitter'>Twitter</ButtonFlat>\n        <ButtonFlat palette='facebook'>Facebook</ButtonFlat>\n      </Flex>\n      </Flex>\n    )\n  }\n}\n\n/* --- Form Configuration --- */\nexport default withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n\n    console.log(values, 'submit action')\n  }\n})(Formik)","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { withFormik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport { Box, Button, ButtonFlat, Flex, Heading, Span } from 'atoms'\nimport { Switch } from 'fields'\n/* --- Styled Components --- */\nimport styled from 'styled-components'\nconst SearchField = styled(Field)`\n  height: 50px;\n  width: 100%;\n`\n\nconst IssuerSearchField = styled(Field)`\n  height: 30px;\n`\n\nconst Label = styled.label`\n  font-size: 10px;\n`\n\n/* --- React Component --- */\nclass Formik extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      filterIsOpen: true\n    }\n\n    this.openFilter = this.openFilter.bind(this);\n    this.closeFilter = this.closeFilter.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n  }\n\n  openFilter() {\n    this.setState({filterIsOpen: true});\n  }\n\n  closeFilter() {\n    this.setState({filterIsOpen: false});\n  }\n\n  toggleFilter() {\n    this.setState({filterIsOpen: !this.state.filterIsOpen});\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    const { isValid, setFieldValue, setFieldTouched } = this.props\n    return(\n      <Box {...this.props.styled}>\n        <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n          <Flex column color='white'>\n            <Label>Address <ErrorMessage name=\"issuer\" component=\"span\" /></Label>\n            <IssuerSearchField type=\"text\" name=\"address\" placeholder='0xK19...F56V' />\n          </Flex>\n          <Flex column color='white'>\n            <Label>Name <ErrorMessage name=\"issuer\" component=\"span\" /></Label>\n            <IssuerSearchField type=\"text\" name=\"address\" placeholder='0xK19...F56V' />\n          </Flex>\n        </Form>\n        {\n          this.state.filterIsOpen &&\n          <Flex column color='white'>\n            <Switch\n            type=\"text\" name=\"verifiedTwitter\" label='Twitter Verified'\n            height={20} width={50}\n            setFieldValue={setFieldValue} setFieldTouched={setFieldTouched}/>\n            <Switch\n            type=\"text\" name=\"verifiedFacebook\" label='Facebook Verified'\n            height={20} width={50}\n            setFieldValue={setFieldValue} setFieldTouched={setFieldTouched}/>\n            <Switch\n            type=\"text\" name=\"verifiedGithub\" label='Github Verified'\n            height={20} width={50}\n            setFieldValue={setFieldValue} setFieldTouched={setFieldTouched}/>\n          </Flex>\n        }\n        {/* <Heading onClick={this.toggleFilter} color='white' underlineHover cursor='pointer' fontSize={2} fontWeight={300} textAlign='center' >Filters</Heading> */}\n        <ButtonFlat type=\"submit\" disabled={this.props.isSubmitting} color='white' palette='green' mx={0} mt={20} width={1}>\n          Search\n        </ButtonFlat>\n      </Box>\n    )\n  }\n}\n\n/* --- Form Configuration --- */\nexport default withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n\n\n  }\n})(Formik)","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { FieldArray, Form, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { ButtonFlat, Heading, HorizontalRule, Flex, Paragraph, Span } from 'atoms'\nimport { Input } from 'fields'\n\n/* --- React Component --- */\nclass FormVerifiableCredentialGenerate extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      error: {\n        status: false,\n        description: 'Template incorrectly formatted. Please delete and rebuild template.'\n      }\n    }\n  }\n  \n  /* Did Mount */\n  componentDidMount()\n  {\n    console.log(this.props, 'FormVerifiableCredentialGenerate')\n  }\n  \n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Catch Error */\n  componentDidCatch(err) {\n    this.setState({\n      error: {\n        ...this.state.error,\n        status: true\n      }\n    })\n  }\n\n  /* Render */\n  render(){\n    const { isSubmitting } = this.props\n    const { error } = this.state\n\n    return(\n      error.status\n      ? <Span fontSize={[2]}>{error.description}</Span>\n      : isSubmitting\n        ? <FormSubmitting/>\n        : <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >        \n            <Flex column>\n              <Heading color='blue' fontSize={[3,3,4]}>\n                {this.props.name}\n              </Heading>\n              <Heading level={5}fontSize={[2]} mb={15}>\n                <strong>Type:</strong> {this.props.type}\n              </Heading>\n              <Paragraph fontSize={[1]}>\n                <Span fontSize={[2]}>{this.props.description}</Span>\n              </Paragraph>\n            </Flex>\n\n\n            <label>Subject <ErrorMessage name=\"subject\" component=\"span\" className=\"input-error\" /></label>\n            <Input type=\"text\" name=\"subject\" />\n\n            <label>Issuer <ErrorMessage name=\"issuer\" component=\"span\" className=\"input-error\" /></label>\n            <Input component=\"select\" name=\"issuer\">\n                <option value=\"\">--Select--</option>\n                <option value=\"meshhub\">MeshHub</option>\n                <option value=\"consensys\">ConsenSys</option>\n                <option value=\"rapid\">Rapid</option>\n            </Input>\n\n            <HorizontalRule my={20}/>\n            <Heading fontSize={[3]}>\n              Claims\n            </Heading>\n\n          <FieldArray\n            name=\"claims\"\n            render={arrayHelpers => (\n              <div>\n                {this.props.claims.map((claim, index) => (\n                  <div key={index}>\n                    <Input type=\"text\" hidden name={`claims[${index}]key`} />\n                    <label>{claim.description} <ErrorMessage name={`claims[${index}]value`} component=\"span\" className=\"input-error\" /></label>\n                    <Input type=\"text\" name={`claims[${index}]value`} />\n                  </div>\n                ))}\n              </div>\n            )}\n          />\n\n\n            <ButtonFlat pill type=\"submit\" disabled={this.props.isSubmitting} palette='green' mt={15} width={1}>\n              Issue Credential\n            </ButtonFlat>\n        </Form>\n    )\n  }\n}\n\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  mutation: fromData.get(state,  'mutate|credential'),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'mutate|credential',\n    }\n  ))\n});\n\n/* --- GraphQL --- */\nconst MutationGenerate = ({ claims, issuer, subject, type }) =>`\nmutation {\n  addCredential(\n    type: \"${type}\"\n    iss: \"${issuer}\"\n    sub: \"${subject}\"\n    claims:${JSON.stringify(claims).replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\")}\n  ) \n  {\n    type\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormTemplate = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    claims: props.claims.map(claim => ({ key: claim.name})),\n    type: props.type\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.subject) errors.subject = '*Required';\n    if (!values.issuer) errors.issuer = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n\n    console.log(values, props)\n    const Mutation = MutationGenerate(values)\n    props.mutateRequest(Mutation)\n  }\n})(FormVerifiableCredentialGenerate)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTemplate)\n\nconst FormSubmitting = props =>\n<Flex column center>\n  <Heading color='blue' fontSize={[3]}>\n    Generating Credential\n  </Heading>\n  <Paragraph fontSize={[1]}>\n    You will be notified when credential has been generated.\n  </Paragraph>\n</Flex>","/* --- Global Dependencies --- */\nimport idx from 'idx'\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, FieldArray, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { Box, Button, ButtonFlat, Flex, Heading, Paragraph, Span } from 'atoms'\nimport { Input, Select } from 'fields'\n\n\nconst Query =`\n{\n  getTemplates {\n    type\n    name\n    description\n    claim_fields {\n      name\n      description\n    }\n  }\n}\n`\n/* --- React Component --- */\nclass FormVerifiableCredentialTemplate extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isLoading: true,\n      isTemplateSelected: false,\n      template: undefined,\n      templates: undefined\n    }\n  }\n\n  // Mounted\n  componentDidMount()\n  {\n    this.props.queryRequest(Query)\n  }\n\n  // Updated\n  componentDidUpdate(prevProps)\n  {\n    console.log(this.props,  this.state)\n    if(idx(this.props, _=>_.request.status) && this.state.isLoading) {\n      this.setState({\n        templates: this.props.request.output,\n        options: templateOptionsTransform(this.props.request.output),\n        isLoading: false\n      })\n    }\n\n    if(idx(this.props, _=>_.values.template.value) != idx(prevProps, _=>_.values.template.value)) {\n\n      const template = this.state.templates.filter(template => template.name === this.props.values.template.value)[0]\n      template.claim_fields.forEach( (claim, index) => this.props.setFieldValue(`claims[${index}].key`, claim.name))\n      this.setState({\n        isTemplateSelected: true,\n        template: template\n      })\n    }\n    \n  }\n\n  // Catched Error\n  componentDidCatch()\n  {\n\n  }\n\n  /* Render */\n  render(){\n    const { options, template, isLoading, isTemplateSelected } = this.state\n    const { isValid, isSubmitting, setFieldValue, setFieldTouched, values } = this.props\n    console.log(values, 'values')\n    return(\n      isLoading\n      ? null\n      : isSubmitting\n        ? <FormSubmitting/>\n        : <Form onSubmit={this.props.handleSubmit} style={{width: '100%', padding: '30px'}} >\n\n            <Select name=\"template\" options={options} setFieldValue={setFieldValue} setFieldTouched={setFieldTouched} />\n            {\n              isTemplateSelected\n              && <>\n                  <Flex column mt={30}>\n                  <Heading color='blue' fontSize={[3,3,4]}>\n                    {template.name}\n                  </Heading>\n                  <Heading level={5}fontSize={[2]} mb={15}>\n                    <strong>Type:</strong> {template.type}\n                  </Heading>\n                  <Paragraph fontSize={[1]}>\n                    <Span fontSize={[2]}>{template.description}</Span>\n                  </Paragraph>\n                </Flex>\n\n                <Input hidden name='type' value={template.type} />\n                <label>Subject <ErrorMessage name=\"subject\" component=\"span\" className=\"input-error\" /></label>\n                <Input type=\"text\" name=\"subject\" />\n\n                <label>Issuer <ErrorMessage name=\"issuer\" component=\"span\" className=\"input-error\" /></label>\n                <Input component=\"select\" name=\"issuer\">\n                    <option value=\"\">--Select--</option>\n                    <option value=\"meshhub\">MeshHub</option>\n                    <option value=\"consensys\">ConsenSys</option>\n                    <option value=\"rapid\">Rapid</option>\n                </Input>\n\n\n                <Heading fontSize={[3]} mt={20}>\n                  Claims\n                </Heading>\n\n                <FieldArray\n                  name=\"claims\"\n                  render={arrayHelpers => (\n                    <div>\n                      {template.claim_fields.map((claim, index) => (\n                        <div key={index}>\n                          <Input type=\"text\" name={`claims[${index}]key`} value={claim.name} />\n                          <label>{claim.description} <ErrorMessage name={`claims[${index}]value`} component=\"span\" className=\"input-error\" /></label>\n                          <Input type=\"text\" name={`claims[${index}]value`} />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                />\n              \n                <ButtonFlat type=\"submit\" uppercase palette='green' disabled={this.props.isSubmitting} fontSize={2} mt={15} width={1}>\n                  Issue Verifiable Credential\n                </ButtonFlat>\n              </>\n            }\n          </Form>\n    )\n  }\n}\n\nconst templateOptionsTransform = templates => templates.map( template => ({label: template.name, value: template.name }))\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  request: fromData.get(state,  `query|verifiableCredentialTemplates`),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  queryRequest: (query) =>dispatch(data.queryRequest('REQUEST')(\n    query,\n    {\n      delta: 'query|verifiableCredentialTemplates',\n    }\n  )),\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'mutate|credential',\n    }\n  ))\n});\n\n/* --- GraphQL --- */\nconst MutationGenerate = ({ claims, issuer, subject, type }) =>`\nmutation {\n  addCredential(\n    type: \"Mesh\"\n    iss: \"${issuer}\"\n    sub: \"${subject}\"\n    claims:${JSON.stringify(claims).replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\")}\n  ) \n  {\n    type\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormTemplate = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    claims: [],\n    template: {},\n    type: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    // if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n    console.log(values)\n    const Mutation = MutationGenerate(values)\n    console.log(Mutation, 'Mutation')\n    props.mutateRequest(Mutation)\n\n  }\n})(FormVerifiableCredentialTemplate)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTemplate)\n\n\nconst FormSubmitting = props =>\n<Flex column center>\n  <Heading color='blue' fontSize={[3]}>\n    Saving Template\n  </Heading>\n</Flex>","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, FieldArray, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { Box, Button, ButtonFlat, Flex, Heading, Paragraph, Span } from 'atoms'\nimport { Input } from 'fields'\n\n/* --- React Component --- */\nclass FormVerifiableCredentialTemplate extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n\n  // Mounted\n  componentDidMount()\n  {\n\n  }\n\n  // Updated\n  componentDidUpdate()\n  {\n\n  }\n\n  // Catched Error\n  componentDidCatch()\n  {\n\n  }\n\n  /* Render */\n  render(){\n    const { isSubmitting } = this.props\n    return(\n      isSubmitting\n      ? <FormSubmitting/>\n      : <Form onSubmit={this.props.handleSubmit} style={{width: '100%', padding: '30px'}} >\n\n        <label>Name <ErrorMessage name=\"name\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"name\" />\n        \n        <label>Description <ErrorMessage name=\"description\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"description\" />\n        \n        <label>Type <ErrorMessage name=\"type\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"type\" />\n\n        <Flex column gradient='gray' gradientDir='90' borderColor='#e0e0e0' borderRadius={5} my={15} p={35}>\n\n        <FieldArray\n            name=\"claims\"\n            render={arrayHelpers => (\n              <div>\n                {this.props.values.claims.map((claim, index) => (\n                  <div key={index}>\n                    <Flex align='center' between py={15}>\n                      <Box width={[1,1, 0.40]}>\n                        <label style={{ fontSize:'12px'}} >Key <ErrorMessage name={`claims.${index}.name`} component=\"span\" className=\"input-error\" /></label>\n                        <Input type=\"text\" name={`claims.${index}.name`} />\n                        <Span fontSize={[0]}>\tex. nameFull, addressStreet, questId, etc....</Span>\n                      </Box>\n  \n                      <Box width={[1,1, 0.40]} ml={15}>\n                        <label style={{ fontSize:'12px' }}>Description <ErrorMessage name={`claims.${index}.description`} component=\"span\" className=\"input-error\" /></label>\n                        <Input type=\"text\" name={`claims.${index}.description`} />\n                        <Span fontSize={[0]}>A short description of the claim data.</Span>\n                      </Box>\n\n                      <Box>\n                        <ButtonFlat ml='auto' type=\"button\" onClick={() => arrayHelpers.remove(index)}> Delete </ButtonFlat>\n                      </Box>\n                    </Flex>\n\n                  </div>\n                ))}\n                <ButtonFlat type='button' uppercase palette='blue' onClick={() => arrayHelpers.push({ name: '', description: '' })} mt={20} width={1}>\n                  Add Claim Field\n                </ButtonFlat>\n              </div>\n            )}\n          />\n\n        </Flex>\n\n        <ButtonFlat type=\"submit\" uppercase palette='green' disabled={this.props.isSubmitting} fontSize={2} mt={15} width={1}>\n          Create Template\n        </ButtonFlat>\n    </Form>\n    )\n  }\n}\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  mutation: fromData.get(state,  'template|verifiableCredential'),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: 'template|verifiableCredential',\n    }\n  ))\n});\n\n/* --- GraphQL --- */\nconst MutationGenerate = ({ claims, description, name, type }) =>`\nmutation {\n  addTemplate\n  (\n    description: \"${description}\"\n    name:\"${name}\",\n    type: \"${type}\",\n    claim_fields: ${JSON.stringify(claims).replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\")}\n  ) \n  {\n    name\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormTemplate = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n    claims: []\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    if (!values.description) errors.description = '*Required';\n    if (!values.type) errors.type = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n    const Mutation = MutationGenerate(values)\n    props.mutateRequest(Mutation)\n  }\n})(FormVerifiableCredentialTemplate)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTemplate)\n\n\nconst FormSubmitting = props =>\n<Flex column center>\n  <Heading color='blue' fontSize={[3]}>\n    Saving Template\n  </Heading>\n</Flex>","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { withFormik } from 'formik';\nimport { Form, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport { Button } from 'atoms'\nimport { Input } from 'fields'\n\n/* --- React Component --- */\nclass Formik extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    return(\n      <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n        \n        <label>Name <ErrorMessage name=\"name\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"name\" />\n\n        <Button pill type=\"submit\" disabled={this.props.isSubmitting} mt={15} width={1}>\n          Submit\n        </Button>\n    </Form>\n    )\n  }\n}\n\n/* --- Form Configuration --- */\nexport default withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n\n    console.log(values, 'submit action')\n  }\n})(Formik)","/* --- Global Dependencies --- */\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { Form, Field, FieldArray, ErrorMessage } from 'formik';\n\n/* --- Local Dependencies --- */\nimport data from 'storeRedux/departments/data/actions'\nimport { fromData } from 'storeRedux/departments/selectors'\nimport { Button, Flex, HorizontalRule, Paragraph, Span } from 'atoms'\nimport { Input } from 'fields'\n\n/* --- React Component --- */\nclass FormClass extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n\n  }\n  \n  componentDidMount()\n  {\n\n  }\n\n  /* Will Update */\n  componentWillUpdate()\n  {\n\n  }\n\n  /* Did Update */\n  componentDidUpdate()\n  {\n\n  }\n\n  /* Will Mount */\n  componentWillUnmount()\n  {\n    \n  }\n  \n  /* Render */\n  render(){\n    return(\n      <Form onSubmit={this.props.handleSubmit} style={{width: '100%'}} >\n\n        <label>Name <ErrorMessage name=\"name\" component=\"span\" className=\"input-error\" /></label>\n        <Input type=\"text\" name=\"name\" />\n      \n\n        <Button type=\"submit\" gradient='blue' disabled={this.props.isSubmitting} mt={15} width={1}>\n          Create Template\n        </Button>\n    </Form>\n    )\n  }\n}\n\n/* -- Global State -- */\nconst mapStateToProps = (state, props) => ({\n  mutation: fromData.get(state,  ''),\n});\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  mutateRequest: (mutation) =>dispatch(data.mutateRequest('REQUEST')(\n    mutation,\n    {\n      delta: '',\n    }\n  ))\n});\n\n/* --- GraphQL --- */\nconst MutationGenerate = ({ claims, description, name, type }) =>`\nmutation {\n  add\n  (\n    name:\"${name}\",\n  ) \n  {\n    name\n  }\n}\n`\n\n/* --- Form Configuration --- */\nconst FormTemplate = withFormik({\n  /* Map Props to Field Values */\n  mapPropsToValues: props => ({\n    name: '',\n  }),\n\n  /* Form Validation */\n  validate: values => {\n    let errors = {};\n    if (!values.name) errors.name = '*Required';\n    return errors;\n  },\n\n  /* Handle Form Submission */\n  handleSubmit: (values, { props, ...form }) => {\n    const Mutation = MutationGenerate(values)\n    props.mutateRequest(Mutation)\n  }\n})(FormClass)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTemplate)"],"sourceRoot":""}